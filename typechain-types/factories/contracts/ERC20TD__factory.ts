/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ERC20TD, ERC20TDInterface } from "../../contracts/ERC20TD";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DenyTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DenyTransferFrom",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "teacherAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isTeacher",
        type: "bool",
      },
    ],
    name: "setTeacher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "teachers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611c18380380611c18833981810160405281019061003291906103dd565b82828160039081610043919061067f565b508060049081610053919061067f565b50505061006633826100c660201b60201c565b6001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505061085b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610135576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012c906107ae565b60405180910390fd5b6101476000838361022860201b60201c565b806002600082825461015991906107fd565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161020a9190610840565b60405180910390a36102246000838361022d60201b60201c565b5050565b505050565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61029982610250565b810181811067ffffffffffffffff821117156102b8576102b7610261565b5b80604052505050565b60006102cb610232565b90506102d78282610290565b919050565b600067ffffffffffffffff8211156102f7576102f6610261565b5b61030082610250565b9050602081019050919050565b60005b8381101561032b578082015181840152602081019050610310565b60008484015250505050565b600061034a610345846102dc565b6102c1565b9050828152602081018484840111156103665761036561024b565b5b61037184828561030d565b509392505050565b600082601f83011261038e5761038d610246565b5b815161039e848260208601610337565b91505092915050565b6000819050919050565b6103ba816103a7565b81146103c557600080fd5b50565b6000815190506103d7816103b1565b92915050565b6000806000606084860312156103f6576103f561023c565b5b600084015167ffffffffffffffff81111561041457610413610241565b5b61042086828701610379565b935050602084015167ffffffffffffffff81111561044157610440610241565b5b61044d86828701610379565b925050604061045e868287016103c8565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806104ba57607f821691505b6020821081036104cd576104cc610473565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826104f8565b61053f86836104f8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061057c610577610572846103a7565b610557565b6103a7565b9050919050565b6000819050919050565b61059683610561565b6105aa6105a282610583565b848454610505565b825550505050565b600090565b6105bf6105b2565b6105ca81848461058d565b505050565b5b818110156105ee576105e36000826105b7565b6001810190506105d0565b5050565b601f82111561063357610604816104d3565b61060d846104e8565b8101602085101561061c578190505b610630610628856104e8565b8301826105cf565b50505b505050565b600082821c905092915050565b600061065660001984600802610638565b1980831691505092915050565b600061066f8383610645565b9150826002028217905092915050565b61068882610468565b67ffffffffffffffff8111156106a1576106a0610261565b5b6106ab82546104a2565b6106b68282856105f2565b600060209050601f8311600181146106e957600084156106d7578287015190505b6106e18582610663565b865550610749565b601f1984166106f7866104d3565b60005b8281101561071f578489015182556001820191506020850194506020810190506106fa565b8683101561073c5784890151610738601f891682610645565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000610798601f83610751565b91506107a382610762565b602082019050919050565b600060208201905081810360008301526107c78161078b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610808826103a7565b9150610813836103a7565b925082820190508082111561082b5761082a6107ce565b5b92915050565b61083a816103a7565b82525050565b60006020820190506108556000830184610831565b92915050565b6113ae8061086a6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d71461025f578063a9059cbb1461028f578063dd62ed3e146102bf578063f0a47f78146102ef576100ea565b806339509351146101e157806370a082311461021157806395d89b4114610241576100ea565b8063158a4988116100c8578063158a49881461015957806318160ddd1461017557806323b872dd14610193578063313ce567146101c3576100ea565b8063059e7d43146100ef57806306fdde031461010b578063095ea7b314610129575b600080fd5b61010960048036038101906101049190610bb1565b61031f565b005b6101136103d0565b6040516101209190610c81565b60405180910390f35b610143600480360381019061013e9190610cd9565b610462565b6040516101509190610d28565b60405180910390f35b610173600480360381019061016e9190610cd9565b610485565b005b61017d610516565b60405161018a9190610d52565b60405180910390f35b6101ad60048036038101906101a89190610d6d565b610520565b6040516101ba9190610d28565b60405180910390f35b6101cb610568565b6040516101d89190610ddc565b60405180910390f35b6101fb60048036038101906101f69190610cd9565b610571565b6040516102089190610d28565b60405180910390f35b61022b60048036038101906102269190610df7565b6105a8565b6040516102389190610d52565b60405180910390f35b6102496105f0565b6040516102569190610c81565b60405180910390f35b61027960048036038101906102749190610cd9565b610682565b6040516102869190610d28565b60405180910390f35b6102a960048036038101906102a49190610cd9565b6106f9565b6040516102b69190610d28565b60405180910390f35b6102d960048036038101906102d49190610e24565b61073e565b6040516102e69190610d52565b60405180910390f35b61030960048036038101906103049190610df7565b6107c5565b6040516103169190610d28565b60405180910390f35b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661037557600080fd5b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6060600380546103df90610e93565b80601f016020809104026020016040519081016040528092919081815260200182805461040b90610e93565b80156104585780601f1061042d57610100808354040283529160200191610458565b820191906000526020600020905b81548152906001019060200180831161043b57829003601f168201915b5050505050905090565b60008061046d6107e5565b905061047a8185856107ed565b600191505092915050565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104db57600080fd5b60006104e5610568565b60ff169050600081600a6104f99190611026565b905061051084828561050b9190611071565b6109b6565b50505050565b6000600254905090565b60007fd0694e7d49b27f4b4a961ce3805328af4167444e06ff16117cdd1a58ac82a076848484604051610555939291906110c2565b60405180910390a1600090509392505050565b60006012905090565b60008061057c6107e5565b905061059d81858561058e858961073e565b61059891906110f9565b6107ed565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105ff90610e93565b80601f016020809104026020016040519081016040528092919081815260200182805461062b90610e93565b80156106785780601f1061064d57610100808354040283529160200191610678565b820191906000526020600020905b81548152906001019060200180831161065b57829003601f168201915b5050505050905090565b60008061068d6107e5565b9050600061069b828661073e565b9050838110156106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d79061119f565b60405180910390fd5b6106ed82868684036107ed565b60019250505092915050565b60007fc6b2ad30756dffa7b99169519666c366309cf8ad0d54999b1b472775854fc8da838360405161072c9291906111bf565b60405180910390a16000905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60056020528060005260406000206000915054906101000a900460ff1681565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361085c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108539061125a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c2906112ec565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109a99190610d52565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1c90611358565b60405180910390fd5b610a3160008383610b0c565b8060026000828254610a4391906110f9565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610af49190610d52565b60405180910390a3610b0860008383610b11565b5050565b505050565b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b4682610b1b565b9050919050565b610b5681610b3b565b8114610b6157600080fd5b50565b600081359050610b7381610b4d565b92915050565b60008115159050919050565b610b8e81610b79565b8114610b9957600080fd5b50565b600081359050610bab81610b85565b92915050565b60008060408385031215610bc857610bc7610b16565b5b6000610bd685828601610b64565b9250506020610be785828601610b9c565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c2b578082015181840152602081019050610c10565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c5382610bf1565b610c5d8185610bfc565b9350610c6d818560208601610c0d565b610c7681610c37565b840191505092915050565b60006020820190508181036000830152610c9b8184610c48565b905092915050565b6000819050919050565b610cb681610ca3565b8114610cc157600080fd5b50565b600081359050610cd381610cad565b92915050565b60008060408385031215610cf057610cef610b16565b5b6000610cfe85828601610b64565b9250506020610d0f85828601610cc4565b9150509250929050565b610d2281610b79565b82525050565b6000602082019050610d3d6000830184610d19565b92915050565b610d4c81610ca3565b82525050565b6000602082019050610d676000830184610d43565b92915050565b600080600060608486031215610d8657610d85610b16565b5b6000610d9486828701610b64565b9350506020610da586828701610b64565b9250506040610db686828701610cc4565b9150509250925092565b600060ff82169050919050565b610dd681610dc0565b82525050565b6000602082019050610df16000830184610dcd565b92915050565b600060208284031215610e0d57610e0c610b16565b5b6000610e1b84828501610b64565b91505092915050565b60008060408385031215610e3b57610e3a610b16565b5b6000610e4985828601610b64565b9250506020610e5a85828601610b64565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610eab57607f821691505b602082108103610ebe57610ebd610e64565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115610f4a57808604811115610f2657610f25610ec4565b5b6001851615610f355780820291505b8081029050610f4385610ef3565b9450610f0a565b94509492505050565b600082610f63576001905061101f565b81610f71576000905061101f565b8160018114610f875760028114610f9157610fc0565b600191505061101f565b60ff841115610fa357610fa2610ec4565b5b8360020a915084821115610fba57610fb9610ec4565b5b5061101f565b5060208310610133831016604e8410600b8410161715610ff55782820a905083811115610ff057610fef610ec4565b5b61101f565b6110028484846001610f00565b9250905081840481111561101957611018610ec4565b5b81810290505b9392505050565b600061103182610ca3565b915061103c83610ca3565b92506110697fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610f53565b905092915050565b600061107c82610ca3565b915061108783610ca3565b925082820261109581610ca3565b915082820484148315176110ac576110ab610ec4565b5b5092915050565b6110bc81610b3b565b82525050565b60006060820190506110d760008301866110b3565b6110e460208301856110b3565b6110f16040830184610d43565b949350505050565b600061110482610ca3565b915061110f83610ca3565b925082820190508082111561112757611126610ec4565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611189602583610bfc565b91506111948261112d565b604082019050919050565b600060208201905081810360008301526111b88161117c565b9050919050565b60006040820190506111d460008301856110b3565b6111e16020830184610d43565b9392505050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611244602483610bfc565b915061124f826111e8565b604082019050919050565b6000602082019050818103600083015261127381611237565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006112d6602283610bfc565b91506112e18261127a565b604082019050919050565b60006020820190508181036000830152611305816112c9565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611342601f83610bfc565b915061134d8261130c565b602082019050919050565b6000602082019050818103600083015261137181611335565b905091905056fea264697066735822122056ed97f2927c0fc6c1294408d490d8265c03285f32a4dcf6e9f4959b9c8b604564736f6c634300081b0033";

type ERC20TDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20TD__factory extends ContractFactory {
  constructor(...args: ERC20TDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20TD> {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      overrides || {}
    ) as Promise<ERC20TD>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      overrides || {}
    );
  }
  override attach(address: string): ERC20TD {
    return super.attach(address) as ERC20TD;
  }
  override connect(signer: Signer): ERC20TD__factory {
    return super.connect(signer) as ERC20TD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TDInterface {
    return new utils.Interface(_abi) as ERC20TDInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20TD {
    return new Contract(address, _abi, signerOrProvider) as ERC20TD;
  }
}
